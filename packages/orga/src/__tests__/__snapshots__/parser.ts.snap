// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Parser can handle TODO keywords 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Some Headline",
            },
          ],
          "keyword": "NEXT",
          "level": 1,
          "parent": [Circular],
          "priority": undefined,
          "tags": Array [],
          "type": "headline",
        },
      ],
      "level": 1,
      "parent": [Circular],
      "type": "section",
    },
  ],
  "meta": Object {
    "todos": Array [
      "TODO",
      "NEXT",
      "DONE",
    ],
  },
  "type": "root",
}
`;

exports[`Parser can handle affiliated keywords 1`] = `
Node {
  "children": Array [
    Node {
      "attributes": Object {
        "NAME": "code_block",
      },
      "children": Array [],
      "name": "SRC",
      "params": Array [
        "javascript",
      ],
      "parent": [Circular],
      "type": "block",
      "value": "console.log('hello world.')",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle blocks 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "headline",
            },
          ],
          "keyword": undefined,
          "level": 1,
          "parent": [Circular],
          "priority": undefined,
          "tags": Array [],
          "type": "headline",
        },
        Node {
          "children": Array [],
          "name": "SRC",
          "params": Array [
            "javascript",
          ],
          "parent": [Circular],
          "type": "block",
          "value": "console.log('hello')
console.log('world')",
        },
      ],
      "level": 1,
      "parent": [Circular],
      "type": "section",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle broken blocks 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "headline",
            },
          ],
          "keyword": undefined,
          "level": 1,
          "parent": [Circular],
          "priority": undefined,
          "tags": Array [],
          "type": "headline",
        },
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "#+BEGIN_SRC javascript console.log('hello') console.log('world')",
            },
          ],
          "parent": [Circular],
          "type": "paragraph",
        },
      ],
      "level": 1,
      "parent": [Circular],
      "type": "section",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle broken blocks 2`] = `
Node {
  "children": Array [
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "headline",
            },
          ],
          "keyword": undefined,
          "level": 1,
          "parent": [Circular],
          "priority": undefined,
          "tags": Array [],
          "type": "headline",
        },
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "console.log('hello') console.log('world') #+END_SRC",
            },
          ],
          "parent": [Circular],
          "type": "paragraph",
        },
      ],
      "level": 1,
      "parent": [Circular],
      "type": "section",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle broken drawers 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "headline",
            },
          ],
          "keyword": undefined,
          "level": 1,
          "parent": [Circular],
          "priority": undefined,
          "tags": Array [],
          "type": "headline",
        },
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": ":PROPERTIES: key: value key: value",
            },
          ],
          "parent": [Circular],
          "type": "paragraph",
        },
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Paragraph",
            },
          ],
          "parent": [Circular],
          "type": "paragraph",
        },
      ],
      "level": 1,
      "parent": [Circular],
      "type": "section",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle broken multi line list item 1`] = `
Node {
  "children": Array [
    List {
      "children": Array [
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Apple is an American multinational technology company headquartered in Cupertino, California that designs, develops, and sells consumer electronics,",
            },
          ],
          "ordered": false,
          "parent": [Circular],
          "tag": undefined,
          "type": "list.item",
        },
      ],
      "descriptive": false,
      "ordered": false,
      "parent": [Circular],
      "type": "list",
    },
    Node {
      "children": Array [
        Node {
          "children": Array [],
          "parent": [Circular],
          "type": "text",
          "value": "computer software, and online services.",
        },
      ],
      "parent": [Circular],
      "type": "paragraph",
    },
    List {
      "children": Array [
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Orange",
            },
          ],
          "ordered": false,
          "parent": [Circular],
          "tag": undefined,
          "type": "list.item",
        },
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Banana",
            },
          ],
          "ordered": false,
          "parent": [Circular],
          "tag": undefined,
          "type": "list.item",
        },
      ],
      "descriptive": false,
      "ordered": false,
      "parent": [Circular],
      "type": "list",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle broken multi line list item 2`] = `
Node {
  "children": Array [
    List {
      "children": Array [
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Apple is an American multinational technology company headquartered in",
            },
          ],
          "ordered": false,
          "parent": [Circular],
          "tag": undefined,
          "type": "list.item",
        },
      ],
      "descriptive": false,
      "ordered": false,
      "parent": [Circular],
      "type": "list",
    },
    Node {
      "children": Array [
        Node {
          "children": Array [],
          "parent": [Circular],
          "type": "text",
          "value": "Cupertino, California that designs, develops, and sells consumer electronics, computer software, and online services.",
        },
      ],
      "parent": [Circular],
      "type": "paragraph",
    },
    List {
      "children": Array [
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Orange",
            },
          ],
          "ordered": false,
          "parent": [Circular],
          "tag": undefined,
          "type": "list.item",
        },
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Banana",
            },
          ],
          "ordered": false,
          "parent": [Circular],
          "tag": undefined,
          "type": "list.item",
        },
      ],
      "descriptive": false,
      "ordered": false,
      "parent": [Circular],
      "type": "list",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle complex footnote 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Content of the footnote.",
            },
          ],
          "parent": [Circular],
          "type": "paragraph",
        },
        Node {
          "children": Array [],
          "name": "SRC",
          "params": Array [
            "javascript",
          ],
          "parent": [Circular],
          "type": "block",
          "value": "console.log('footnote with code block')",
        },
      ],
      "label": "1",
      "parent": [Circular],
      "type": "footnote.definition",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle descriptive list 1`] = `
Node {
  "children": Array [
    List {
      "children": Array [
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "it's apple",
            },
          ],
          "ordered": false,
          "parent": [Circular],
          "tag": "Apple",
          "type": "list.item",
        },
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Orange",
            },
          ],
          "ordered": false,
          "parent": [Circular],
          "tag": undefined,
          "type": "list.item",
        },
      ],
      "descriptive": true,
      "ordered": false,
      "parent": [Circular],
      "type": "list",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle descriptive list 2`] = `
Node {
  "children": Array [
    List {
      "children": Array [
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Orange",
            },
          ],
          "ordered": false,
          "parent": [Circular],
          "tag": undefined,
          "type": "list.item",
        },
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "it's apple",
            },
          ],
          "ordered": false,
          "parent": [Circular],
          "tag": "Apple",
          "type": "list.item",
        },
      ],
      "descriptive": false,
      "ordered": false,
      "parent": [Circular],
      "type": "list",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle drawers 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "headline",
            },
            Node {
              "children": Array [],
              "name": "PROPERTIES",
              "parent": [Circular],
              "type": "drawer",
              "value": "key1: value 1
key2: value 2",
            },
          ],
          "keyword": undefined,
          "level": 1,
          "parent": [Circular],
          "priority": undefined,
          "tags": Array [],
          "type": "headline",
        },
      ],
      "level": 1,
      "parent": [Circular],
      "type": "section",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle footnote 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Content of the footnote.",
            },
          ],
          "parent": [Circular],
          "type": "paragraph",
        },
      ],
      "label": "1",
      "parent": [Circular],
      "type": "footnote.definition",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle html export 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [],
      "parent": [Circular],
      "type": "html",
      "value": "<h1>Hello</h1>",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle html export block 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [],
      "parent": [Circular],
      "type": "html",
      "value": "<h1>hello</h1>
<p>world!</p>",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle invalid affiliated keywords 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [],
      "name": "SRC",
      "params": Array [
        "javascript",
      ],
      "parent": [Circular],
      "type": "block",
      "value": "console.log('hello world.')",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle invalid affiliated keywords 2`] = `
Node {
  "children": Array [
    Node {
      "children": Array [],
      "name": "SRC",
      "params": Array [
        "javascript",
      ],
      "parent": [Circular],
      "type": "block",
      "value": "console.log('hello world.')",
    },
  ],
  "meta": Object {
    "nop": "code_block",
  },
  "type": "root",
}
`;

exports[`Parser can handle multi line footnote 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Content of the footnote. And here is ",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "another",
                },
              ],
              "parent": [Circular],
              "type": "bold",
            },
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": " line.",
            },
          ],
          "parent": [Circular],
          "type": "paragraph",
        },
      ],
      "label": "1",
      "parent": [Circular],
      "type": "footnote.definition",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle multi line list item 1`] = `
Node {
  "children": Array [
    List {
      "children": Array [
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Apple is an American multinational technology company headquartered in Cupertino, California that designs, develops, and sells consumer electronics, computer software, and online services.",
            },
          ],
          "ordered": false,
          "parent": [Circular],
          "tag": undefined,
          "type": "list.item",
        },
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Orange",
            },
          ],
          "ordered": false,
          "parent": [Circular],
          "tag": undefined,
          "type": "list.item",
        },
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Banana",
            },
          ],
          "ordered": false,
          "parent": [Circular],
          "tag": undefined,
          "type": "list.item",
        },
      ],
      "descriptive": false,
      "ordered": false,
      "parent": [Circular],
      "type": "list",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle multiple TODO keywords 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Some Headline",
            },
          ],
          "keyword": "DRAFT",
          "level": 1,
          "parent": [Circular],
          "priority": undefined,
          "tags": Array [],
          "type": "headline",
        },
      ],
      "level": 1,
      "parent": [Circular],
      "type": "section",
    },
  ],
  "meta": Object {
    "todos": Array [
      "TODO",
      "NEXT",
      "DONE",
      "DRAFT",
      "PUBLISHED",
      "BUG",
      "FEATURE",
    ],
  },
  "type": "root",
}
`;

exports[`Parser can handle nested headlines 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "#HEADLINE# 1",
            },
          ],
          "keyword": undefined,
          "level": 1,
          "parent": [Circular],
          "priority": undefined,
          "tags": Array [],
          "type": "headline",
        },
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Paragraph",
            },
          ],
          "parent": [Circular],
          "type": "paragraph",
        },
        Node {
          "children": Array [
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "#HEADLINE# 1.1",
                },
              ],
              "keyword": undefined,
              "level": 2,
              "parent": [Circular],
              "priority": undefined,
              "tags": Array [],
              "type": "headline",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [
                    Node {
                      "children": Array [],
                      "parent": [Circular],
                      "type": "text",
                      "value": "#HEADLINE# 1.1.1",
                    },
                  ],
                  "keyword": undefined,
                  "level": 3,
                  "parent": [Circular],
                  "priority": undefined,
                  "tags": Array [],
                  "type": "headline",
                },
                Node {
                  "children": Array [
                    Node {
                      "children": Array [],
                      "parent": [Circular],
                      "type": "text",
                      "value": "content",
                    },
                  ],
                  "parent": [Circular],
                  "type": "paragraph",
                },
              ],
              "level": 3,
              "parent": [Circular],
              "type": "section",
            },
          ],
          "level": 2,
          "parent": [Circular],
          "type": "section",
        },
        Node {
          "children": Array [
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "#HEADLINE# 1.2",
                },
              ],
              "keyword": undefined,
              "level": 2,
              "parent": [Circular],
              "priority": undefined,
              "tags": Array [],
              "type": "headline",
            },
          ],
          "level": 2,
          "parent": [Circular],
          "type": "section",
        },
      ],
      "level": 1,
      "parent": [Circular],
      "type": "section",
    },
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "#HEADLINE# 2",
            },
          ],
          "keyword": undefined,
          "level": 1,
          "parent": [Circular],
          "priority": undefined,
          "tags": Array [],
          "type": "headline",
        },
        Node {
          "children": Array [
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "#HEADLINE# 2.2",
                },
              ],
              "keyword": undefined,
              "level": 2,
              "parent": [Circular],
              "priority": undefined,
              "tags": Array [],
              "type": "headline",
            },
          ],
          "level": 2,
          "parent": [Circular],
          "type": "section",
        },
      ],
      "level": 1,
      "parent": [Circular],
      "type": "section",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle nested list 1`] = `
Node {
  "children": Array [
    List {
      "children": Array [
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "apple",
            },
            List {
              "children": Array [
                ListItem {
                  "children": Array [
                    Node {
                      "children": Array [],
                      "parent": [Circular],
                      "type": "text",
                      "value": "iPhone",
                    },
                  ],
                  "ordered": false,
                  "parent": [Circular],
                  "tag": undefined,
                  "type": "list.item",
                },
                ListItem {
                  "children": Array [
                    Node {
                      "children": Array [],
                      "parent": [Circular],
                      "type": "text",
                      "value": "Mac",
                    },
                  ],
                  "ordered": false,
                  "parent": [Circular],
                  "tag": undefined,
                  "type": "list.item",
                },
              ],
              "descriptive": false,
              "ordered": false,
              "parent": [Circular],
              "type": "list",
            },
          ],
          "ordered": true,
          "parent": [Circular],
          "tag": undefined,
          "type": "list.item",
        },
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "banana",
            },
          ],
          "ordered": true,
          "parent": [Circular],
          "tag": undefined,
          "type": "list.item",
        },
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "orange",
            },
          ],
          "ordered": false,
          "parent": [Circular],
          "tag": undefined,
          "type": "list.item",
        },
      ],
      "descriptive": false,
      "ordered": true,
      "parent": [Circular],
      "type": "list",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle ordered list 1`] = `
Node {
  "children": Array [
    List {
      "children": Array [
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "apple",
            },
          ],
          "ordered": true,
          "parent": [Circular],
          "tag": undefined,
          "type": "list.item",
        },
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "banana",
            },
          ],
          "ordered": true,
          "parent": [Circular],
          "tag": undefined,
          "type": "list.item",
        },
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "orange",
            },
          ],
          "ordered": false,
          "parent": [Circular],
          "tag": undefined,
          "type": "list.item",
        },
      ],
      "descriptive": false,
      "ordered": true,
      "parent": [Circular],
      "type": "list",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle paragraph 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [
        Node {
          "children": Array [],
          "parent": [Circular],
          "type": "text",
          "value": "this is line one. this is line two. this is line three.",
        },
      ],
      "parent": [Circular],
      "type": "paragraph",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle table 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "Name",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "Species",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "Gender",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "Role",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
          ],
          "parent": [Circular],
          "type": "table.row",
        },
        Node {
          "children": Array [],
          "parent": [Circular],
          "type": "table.separator",
        },
        Node {
          "children": Array [
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "Bruce Wayne",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "Human",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "M",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "Batman",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
          ],
          "parent": [Circular],
          "type": "table.row",
        },
        Node {
          "children": Array [
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "Clark Kent",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "Kryptonian",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "M",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "Superman",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
          ],
          "parent": [Circular],
          "type": "table.row",
        },
        Node {
          "children": Array [
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "Diana Prince",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "Amazonian",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "F",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "Wonder Woman",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
          ],
          "parent": [Circular],
          "type": "table.row",
        },
      ],
      "parent": [Circular],
      "type": "table",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle table with inline style 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "Name",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "Species",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "Gender",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "Role",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
          ],
          "parent": [Circular],
          "type": "table.row",
        },
        Node {
          "children": Array [],
          "parent": [Circular],
          "type": "table.separator",
        },
        Node {
          "children": Array [
            Node {
              "children": Array [
                Node {
                  "children": Array [
                    Node {
                      "children": Array [],
                      "parent": [Circular],
                      "type": "text",
                      "value": "Bruce Wayne",
                    },
                  ],
                  "parent": [Circular],
                  "type": "bold",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [
                    Node {
                      "children": Array [],
                      "parent": [Circular],
                      "type": "text",
                      "value": "Bat",
                    },
                  ],
                  "parent": [Circular],
                  "type": "strikeThrough",
                },
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": " Human",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "M",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "desc": "Batman",
                  "parent": [Circular],
                  "type": "link",
                  "uri": Object {
                    "location": "//en.wikipedia.org/wiki/Batman",
                    "protocol": "https",
                    "raw": "https://en.wikipedia.org/wiki/Batman",
                  },
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
          ],
          "parent": [Circular],
          "type": "table.row",
        },
        Node {
          "children": Array [
            Node {
              "children": Array [
                Node {
                  "children": Array [
                    Node {
                      "children": Array [],
                      "parent": [Circular],
                      "type": "text",
                      "value": "Clark Kent",
                    },
                  ],
                  "parent": [Circular],
                  "type": "underline",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [
                    Node {
                      "children": Array [],
                      "parent": [Circular],
                      "type": "text",
                      "value": "Kryptonian",
                    },
                  ],
                  "parent": [Circular],
                  "type": "verbatim",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "M",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "desc": "Superman",
                  "parent": [Circular],
                  "type": "link",
                  "uri": Object {
                    "location": "//en.wikipedia.org/wiki/Superman",
                    "protocol": "https",
                    "raw": "https://en.wikipedia.org/wiki/Superman",
                  },
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
          ],
          "parent": [Circular],
          "type": "table.row",
        },
        Node {
          "children": Array [
            Node {
              "children": Array [
                Node {
                  "children": Array [
                    Node {
                      "children": Array [],
                      "parent": [Circular],
                      "type": "text",
                      "value": "Diana Prince",
                    },
                  ],
                  "parent": [Circular],
                  "type": "italic",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [
                    Node {
                      "children": Array [],
                      "parent": [Circular],
                      "type": "text",
                      "value": "Amazonian",
                    },
                  ],
                  "parent": [Circular],
                  "type": "code",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "F",
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "desc": "Wonder Woman",
                  "parent": [Circular],
                  "type": "link",
                  "uri": Object {
                    "location": "//en.wikipedia.org/wiki/Wonder_Woman",
                    "protocol": "https",
                    "raw": "https://en.wikipedia.org/wiki/Wonder_Woman",
                  },
                },
              ],
              "parent": [Circular],
              "type": "table.cell",
            },
          ],
          "parent": [Circular],
          "type": "table.row",
        },
      ],
      "parent": [Circular],
      "type": "table",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle timestamp after headline 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "headline",
            },
            Node {
              "children": Array [],
              "date": 2019-08-18T12:00:00.000Z,
              "end": 2019-08-19T12:00:00.000Z,
              "parent": [Circular],
              "rest": undefined,
              "type": "timestamp",
            },
          ],
          "keyword": undefined,
          "level": 1,
          "parent": [Circular],
          "priority": undefined,
          "tags": Array [],
          "type": "headline",
        },
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Paragraph",
            },
          ],
          "parent": [Circular],
          "type": "paragraph",
        },
      ],
      "level": 1,
      "parent": [Circular],
      "type": "section",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser can handle unordered list 1`] = `
Node {
  "children": Array [
    List {
      "children": Array [
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "apple",
            },
          ],
          "ordered": false,
          "parent": [Circular],
          "tag": undefined,
          "type": "list.item",
        },
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "banana",
            },
          ],
          "ordered": false,
          "parent": [Circular],
          "tag": undefined,
          "type": "list.item",
        },
        ListItem {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "orange",
            },
          ],
          "ordered": false,
          "parent": [Circular],
          "tag": undefined,
          "type": "list.item",
        },
      ],
      "descriptive": false,
      "ordered": false,
      "parent": [Circular],
      "type": "list",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser knows when empty lines can stop footnote 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Content of the footnote. And here is another line.",
            },
          ],
          "parent": [Circular],
          "type": "paragraph",
        },
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "still belongs to fn:1",
            },
          ],
          "parent": [Circular],
          "type": "paragraph",
        },
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "This is not.",
            },
          ],
          "parent": [Circular],
          "type": "paragraph",
        },
      ],
      "label": "1",
      "parent": [Circular],
      "type": "footnote.definition",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser knows when footnote can stop footnote 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Content of the footnote. And here is another line.",
            },
          ],
          "parent": [Circular],
          "type": "paragraph",
        },
      ],
      "label": "1",
      "parent": [Circular],
      "type": "footnote.definition",
    },
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "another footnote.",
            },
          ],
          "parent": [Circular],
          "type": "paragraph",
        },
      ],
      "label": "2",
      "parent": [Circular],
      "type": "footnote.definition",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser knows when headline can stop footnote 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "Content of the footnote. And here is another line.",
            },
          ],
          "parent": [Circular],
          "type": "paragraph",
        },
      ],
      "label": "1",
      "parent": [Circular],
      "type": "footnote.definition",
    },
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "A Headline",
            },
          ],
          "keyword": undefined,
          "level": 1,
          "parent": [Circular],
          "priority": undefined,
          "tags": Array [],
          "type": "headline",
        },
      ],
      "level": 1,
      "parent": [Circular],
      "type": "section",
    },
  ],
  "meta": Object {},
  "type": "root",
}
`;

exports[`Parser works 1`] = `
Node {
  "children": Array [
    Node {
      "children": Array [
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": "headline one",
            },
            Node {
              "children": Array [],
              "date": 2017-12-31T11:00:00.000Z,
              "end": undefined,
              "keyword": "DEADLINE",
              "parent": [Circular],
              "type": "planning",
            },
            Node {
              "children": Array [],
              "name": "PROPERTIES",
              "parent": [Circular],
              "type": "drawer",
              "value": "key: value
key: value",
            },
          ],
          "keyword": "NEXT",
          "level": 1,
          "parent": [Circular],
          "priority": undefined,
          "tags": Array [],
          "type": "headline",
        },
        Node {
          "children": Array [
            Node {
              "children": Array [],
              "desc": "Here's",
              "parent": [Circular],
              "type": "link",
              "uri": Object {
                "location": "//github.com/xiaoxinghu/orgajs",
                "protocol": "https",
                "raw": "https://github.com/xiaoxinghu/orgajs",
              },
            },
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": " to the ",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "crazy",
                },
              ],
              "parent": [Circular],
              "type": "bold",
            },
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": " ones, the ",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "misfits",
                },
              ],
              "parent": [Circular],
              "type": "italic",
            },
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": ", the ",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "rebels",
                },
              ],
              "parent": [Circular],
              "type": "underline",
            },
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": ", the ",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "troublemakers",
                },
              ],
              "parent": [Circular],
              "type": "code",
            },
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": ", the round pegs in the ",
            },
            Node {
              "children": Array [
                Node {
                  "children": Array [],
                  "parent": [Circular],
                  "type": "text",
                  "value": "round",
                },
              ],
              "parent": [Circular],
              "type": "strikeThrough",
            },
            Node {
              "children": Array [],
              "parent": [Circular],
              "type": "text",
              "value": " square holes...",
            },
          ],
          "parent": [Circular],
          "type": "paragraph",
        },
      ],
      "level": 1,
      "parent": [Circular],
      "type": "section",
    },
  ],
  "meta": Object {
    "date": "2018-01-01",
    "title": "hello world",
    "todos": Array [
      "TODO",
      "NEXT",
      "DONE",
    ],
  },
  "type": "root",
}
`;
